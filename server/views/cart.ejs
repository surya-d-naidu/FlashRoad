<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Shopping Cart - FlashRoad</title>
  <link rel="stylesheet" href="/css/cart.css">
</head>
<body>
  <header>
    <h1>FlashRoad - Your Shopping Cart</h1>
    <nav>
      <a href="/">Home</a> | <a href="/cart">Cart</a> | <a href="/profile">Profile</a>
    </nav>
  </header>

  <main>
    <div class="cart">
      <div id="empty-cart-message" style="display: none;">
        <p>Your cart is empty.</p>
      </div>
      
      <div id="cart-items-table" style="display: none;">
        <h2>Items in Your Cart</h2>
        <table>
          <thead>
            <tr>
              <th>Product</th>
              <th>Price</th>
              <th>Quantity</th>
              <th>Total</th>
              <th>Remove</th>
            </tr>
          </thead>
          <tbody id="cart-items"></tbody>
        </table>

        <div class="cart-total">
          <p><strong>Total Price:</strong> $<span id="total-price">0.00</span></p>
          <button id="checkout-btn" class="btn" disabled>Proceed to Checkout</button>
        </div>
      </div>
    </div>
  </main>

  <footer>
    <p>&copy; 2024 FlashRoad. All rights reserved.</p>
  </footer>

  <script>
    
    function loadCart() {
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      const cartItemsContainer = document.getElementById('cart-items');
      const totalPriceElement = document.getElementById('total-price');
      const checkoutBtn = document.getElementById('checkout-btn');
      const emptyCartMessage = document.getElementById('empty-cart-message');
      const cartItemsTable = document.getElementById('cart-items-table');
  
      if (cart.length === 0) {
        cartItemsTable.style.display = 'none';
        emptyCartMessage.style.display = 'block';
      } else {
        cartItemsTable.style.display = 'block';
        emptyCartMessage.style.display = 'none';
        cartItemsContainer.innerHTML = '';
        
        let totalPrice = 0;
        cart.forEach((item, index) => {
          totalPrice += item.price * item.quantity;
          const row = document.createElement('tr');
          row.innerHTML = ` 
            <td>${item.name}</td>
            <td>$${item.price.toFixed(2)}</td>
            <td>
              <input type="number" value="${item.quantity}" min="1" onchange="updateQuantity(${index}, this.value)">
            </td>
            <td>$${(item.price * item.quantity).toFixed(2)}</td>
            <td><button onclick="removeFromCart(${index})">Remove</button></td>
          `;
          cartItemsContainer.appendChild(row);
        });
        
        totalPriceElement.textContent = totalPrice.toFixed(2);
        checkoutBtn.disabled = false;
      }
    }
  
    
    function removeFromCart(index) {
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      cart.splice(index, 1);
      localStorage.setItem('cart', JSON.stringify(cart));
      loadCart();
    }
  
    
    function updateQuantity(index, quantity) {
      const cart = JSON.parse(localStorage.getItem('cart')) || [];
      cart[index].quantity = parseInt(quantity, 10);
      localStorage.setItem('cart', JSON.stringify(cart));
      loadCart();
    }
  
    
    
function placeOrder() {
  const cart = JSON.parse(localStorage.getItem('cart')) || [];
  
  if (cart.length === 0) {
    alert('Your cart is empty!');
    return;
  }

  
  const token = localStorage.getItem('authToken');
  
  if (!token) {
    alert('You must be logged in to place an order!');
    return;
  }

  
  fetch('/api/orders/create', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`,  
    },
    body: JSON.stringify({
      cart: cart.map(item => ({
        productId: item.id,  
        quantity: item.quantity,
        price: item.price
      })),
      totalPrice: calculateTotalPrice(cart)
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.message === 'Order created successfully') {
      alert('Your order has been placed successfully!');
      localStorage.removeItem('cart');
      window.location.href = '/';
    } else {
      alert('There was an issue placing your order. Please try again.');
    }
  })
  .catch(error => {
    console.error('Error placing the order:', error);
    alert('An error occurred. Please try again.');
  });
}

  
    
    function calculateTotalPrice(cart) {
      return cart.reduce((total, item) => total + (item.price * item.quantity), 0).toFixed(2);
    }
  
    
    document.getElementById('checkout-btn').addEventListener('click', () => {
      const confirmOrder = confirm("Do you want to place the order?");
      if (confirmOrder) {
        placeOrder();
      }
    });

    
    window.onload = function() {
      loadCart();
    };
  </script>  
</body>
</html>
